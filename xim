#!/bin/bash

### @file:   xim
### @author: John Ed Quinn
### @desc:   Creates templated files for programming.
### @notes:  NA

##### FUNCTIONS #####
usage() {
  cat <<EOF
Description:
	A command that creates templated files for programming.
Usage:
	xim -h
	xim [FLAGS] FILE
Supported File Types:
  	*.cpp  : C++
	*.c    : C
	*.py   : Python3
	*.html : HTML
Flags:
	-h     : Syntax help
	-c     : Open in Visual Studio Code (code).
	-n     : Do not open after creating file
EOF

  exit $1
}

##### GLOBALS #####
NEW_FILE=''
OPEN_FILE=1
VIM=1
VS_CODE=0

##### PARSE COMMAND LINE OPTIONS #####
while [ $# -gt 0 ]; do
	case $1 in
		-h)
			usage 0
			;;
		-c)
			VIM=0
			VS_CODE=1
			;;
		-n)
			OPEN_FILE=0
			;;
		*)
			NEW_FILE=$1
			;;
	esac
	shift
done

### Check if NEW_FILE has been set ###
if [ -z "${NEW_FILE}" ]; then
	echo "Exit Status 1: No filename given"
	exit 1
fi

### If file exists, open file
if [ -f "${NEW_FILE}" ]; then
	vim ${NEW_FILE}
	exit 0
fi

### If file doesn't exist, display message
echo "Creating file '${NEW_FILE}'"

### Create a CPP File ###
if [[ "${NEW_FILE}" = *.cpp ]]; then
cat <<EOF > ${NEW_FILE}
/// @file:   ${NEW_FILE}
/// @author: John Ed Quinn
/// @desc:   NA
/// @notes:  NA

/* PREAMBLE */
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <map>
#include <set>
using namespace std;

/// @func: main
/// @desc: main driver
int main (int argc, char * argv []) {

	return 0;
}

EOF
fi

### Create a C File ###
if [[ "${NEW_FILE}" = *.c ]]; then
cat <<EOF > ${NEW_FILE}
/// @file:   ${NEW_FILE}
/// @author: John Ed Quinn
/// @desc:   NA
/// @notes:  NA

/* PREAMBLE */
#include <stdlib.h>

/// @func: main
/// @desc: main driver
int main (int argc, char * argv []) {

	return 0;
}

EOF
fi

### Create a macros.h File ###
if [[ "${NEW_FILE}" = *macros.h ]]; then
cat <<EOF > ${NEW_FILE}
/// @file:   macros.h
/// @author: John Ed Quinn
/// @desc:   NA
/// @notes:  NA

/// @INCLUDES
#include <stdio.h>

/// @MACROS
#ifndef MACROS_H
#define MACROS_H

/// COLORS
#define AC_RED     "\x1b[31m"
#define AC_GREEN   "\x1b[32m"
#define AC_YELLOW  "\x1b[33m"
#define AC_BLUE    "\x1b[34m"
#define AC_MAGENTA "\x1b[35m"
#define AC_CYAN    "\x1b[36m"
#define AC_RESET   "\x1b[0m"

/// DEBUG
#define DEBUG_TYPE 1
#if DEBUG_TYPE
#define debug(M, ...) fprintf(stderr, AC_BLUE "DEBUG " AC_YELLOW "%s" AC_RESET ":" 	\\
	AC_YELLOW "%d" AC_RESET ":" AC_YELLOW "%s" AC_RESET ": " M "\n", \\
	__FILE__, __LINE__, __func__, ##__VA_ARGS__)
#else
	#define debug(M, ...) fprintf(stderr, "")
#endif

/// STRING COMPARE
#define streq(a, b) (strcmp((a), (b)) == 0)

#endif

EOF
fi

### Create a CPP File ###
if [[ "${NEW_FILE}" = *.py ]]; then
cat <<EOF > ${NEW_FILE}
#!/usr/bin/env python3

'''
#
# File: ${NEW_FILE}
# Author: John Ed Quinn
#
'''

## Function: main
## Description: X
int main(int argc, char * argv []) {

	return 0;
}

EOF
fi

### Create an HTML File ###
BOOTSTRAP_LINK='<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">'
if [[ "${NEW_FILE}" = *.html ]]; then
cat <<EOF > ${NEW_FILE}
<!DOCTYPE html>
<html>

<!--
-- @file:   ${NEW_FILE}
-- @author: John Ed Quinn
-- @desc:   NA
-- @notes:  NA
-->

<!-- START OF HEAD -->
<head>
	<meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>
	<!--<meta name="description" content="Website Description">-->
	<!--<link rel="stylesheet" href="./XXX.css">-->
	<!--${BOOTSTRAP_LINK}-->
	<title>TITLE</title>
</head>

<!-- START OF BODY -->
<body>
	<h1>Hello, world!</h1>
	<p>Some random description</p>
	<button>Some random button</button>
</body>

</html>

EOF
fi

### Create a Makefile ###
if [[ "${NEW_FILE}" = Makefile ]]; then
cat <<EOF > ${NEW_FILE}
### @file:   Makefile
### @author: John Ed Quinn
### @desc:   NA
### @notes:  NA

## Variables
EXEC = prog
PROGRAM = prog.c
COMP = gcc
# FLAGS

\$(EXEC): \$(PROGRAM)
	\$(COMP) -o \$@ \$<

clean:
	rm \$(EXEC)

EOF
fi

##### Open new file #####
if [ ${OPEN_FILE} = 1 ]; then
	if [ ${VIM} = 1 ]; then
		vim ${NEW_FILE}
	elif [ ${VS_CODE} = 1 ]; then
		code ${NEW_FILE}
	else
		echo "Exit Status 2: Unknown error."
		exit 2
	fi
fi
